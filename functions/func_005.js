/*
 * Это примеры каррирования — вместо одной функции от двух аргументов перед нами функция от одного аргумента,
 * которая возвращает другую функцию от одного аргумента (аргумент возвращающей функции доступен для возвращаемой
 * и сохраняется «вокруг неё»): 
 * 
 * Ниже определена функция curryPow. В ней подразумевается, что первый аргумент — это основание степени, а второй —
 * показатель. Так она возводит 2 в степень 10 и получает 1024.
 * 
 * Напишите аналогичное определение для функции partiPow, которое отвечает такому условию:
 * когда мы вызываем её от одного аргумента, она возвращает функцию с зафиксированным показателем степени.
 * Например, qv — это функция, которая возводит свой аргумент в квадрат — поэтому qv(5) даёт 25.
 */

const curryPow = x => y => x ** y;

console.log('2^10 =', curryPow(2)(10));

const partiPow = x => y => y ** x;
const qv = partiPow(2);
const cb = partiPow(3);

console.log('5^2 =', qv(5));
console.log('5^3 =', cb(5));
