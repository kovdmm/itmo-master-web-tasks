<!-- Task: https://kodaktor.ru/func_004 -->
<!-- Result: https://kodaktor.ru/func004_4959b -->
<!-- Code: -->
<!DOCTYPE html>
<html>

<head>
	<title>Композиция (func_task)</title>
	<meta charset="utf-8">
</head>

<body>
	<script src="/j/dblttl"></script>
	<p>При вызове <code>qv(sc(5))</code> мы получаем <code>36</code>, т.к. это <code>(5+1)*(5+1) = 6*6</code>, а в
		обратном порядке <code>5*5+1</code> получаем <code>26</code></p>
	<p>Импортируйте из <a href="https://kodaktor.ru/j/goss_compose" target="_blank">модуля /j/goss_compose</a> функцию
		<code>compose(f1,f2,...)</code></p>
	<p>Эта функция высшего порядка возвращает функцию, которая представляет собой композицию функций
		<code>f1, f2,...,</code> которые она получила в качестве аргументов.
		Допишите в строках <code>16</code> и <code>17</code> вызовы этой функции от функций <code>qv</code> и
		<code>sc</code> так, чтобы получить значения <code>36</code> и <code>26</code> от аргумента <code>5</code>.</p>
	<script id="code" type="module">
		import { default as goss_compose } from '/j/goss_compose';

		const qv = x => x * x;
		const sc = x => x + 1;

		Out.log('qv(sc(5)) = ', qv(sc(5))); /* 36 */
		Out.log('sc(qv(5)) = ', sc(qv(5))); /* 26 */

		const qvsc = goss_compose(qv, sc);
		const scqv = goss_compose(sc, qv);

		Out.log('qvsc(5) = goss_compose(qv, sc) = ', qvsc(5));
		Out.log('scqv(5) = goss_compose(sc, qv) = ', scqv(5));
	</script>
	
	<!-- Necessary scripts and styles: -->
	<script src="/j/out"></script>
	<script src="/j/beautify.min.js_6ebc2"></script>
	<script src="/high.js"></script>
	<script src="/j/code_to_pre_19f77"></script>
	<link rel="stylesheet" href="/css/board3">
	<link rel="stylesheet" href="/css/highcss_atom">
</body>

</html>
